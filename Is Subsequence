/*
Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the
characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).
*/

// Algorithm: 
Find the index of the first char t[0] in s. Denote it by i, then find the next char t[1] in s[i+1:].

 public boolean isSubsequence(String s, String t) {
        int n = t.length();
        if (s.length()<1 || s== null) {return true;}
        if (n<1 || t == null) {return false;}
        int index = -1;
        for (int i = 0; i < s.length(); i++){
            index = findChar(s.charAt(i), t, index);
            if (index == -1){
                return false;
            }
            if (index == n-1 && i != s.length()-1){return false;}
        }
        return true;
        
    }
    private int findChar(char c, String s, int startIndex){
        for (int i = startIndex+1; i < s.length(); i++){
            if (s.charAt(i) == c){ return i;}
        }
        return -1;
        
    }
